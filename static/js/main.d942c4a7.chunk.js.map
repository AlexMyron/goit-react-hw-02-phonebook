{"version":3,"sources":["components/Form/Form.js","components/ListElement/ListElement.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","number","filter","onChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetInput","this","type","pattern","title","required","Component","ListElement","elData","deleteBtn","className","s","item","icon","id","onClick","Contacts","contactsList","searchRes","btnDelete","isListEmpty","length","isSearchResEmpty","list","map","contact","Filter","handleQuery","query","size","App","contacts","handleFormSubmit","data","checkForDouble","uuidv4","searchContacts","searchQuery","trim","toLowerCase","el","indexOf","updateStateEl","res","newName","isDouble","find","alert","onDeleteBtn","dataId","updatedList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAyDeA,E,4MAtDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,GACRC,OAAQ,I,EAGVC,SAAW,SAAAC,GACT,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,MAAON,EAAf,EAAeA,KACf,EAAKO,SAAL,eAAiBP,EAAOM,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKZ,OACzB,EAAKa,c,EAGPA,WAAa,WACX,EAAKL,SAAS,CAAEP,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMU,SAAUE,KAAKL,aAArB,UACE,yCAEE,uBACEL,SAAUU,KAAKV,SACfG,MAAOO,KAAKd,MAAMC,KAClBc,KAAK,OACLd,KAAK,OACLe,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEd,SAAUU,KAAKV,SACfW,KAAK,MACLd,KAAK,SACLM,MAAOO,KAAKd,MAAME,OAClBc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAAb,gC,GAjDWI,a,iDCsBJC,EAlBK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAK7B,OACE,qBAAIC,UAAWC,IAAEC,KAAjB,UACE,cAAC,IAAD,CAAQF,UAAWC,IAAEE,OACpBL,EAAOpB,KAFV,KAEkBoB,EAAOnB,OACvB,wBAAQa,KAAK,SAAS,UAASM,EAAOM,GAAIC,QAR3B,SAAAvB,GAEjBiB,EAAUD,EAAOM,KAMf,SACE,cAAC,IAAD,UCqBOE,EAjCE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACrCC,EAAsC,IAAxBH,EAAaI,OAC3BC,EAAwC,IAArBJ,EAAUG,OACnC,OACE,gCACGD,GAAe,mBAAGV,UAAU,UAAb,gDAChB,oBAAIA,UAAWC,IAAEY,KAAjB,SACGD,EACGL,EAAaO,KAAI,SAAAC,GAAO,OACtB,cAAC,EAAD,CAAajB,OAAQiB,EAAShB,UAAWU,GAAgBM,EAAQX,OAEnEI,EAAUM,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAajB,OAAQiB,GAAcA,EAAQX,a,QCYjEY,E,4MAxBbvC,MAAQ,CACNG,OAAQ,I,EAGVqC,YAAc,SAAAnC,GACZ,IAAMoC,EAAQpC,EAAEC,cAAcC,MAC9B,EAAKC,SAAS,CAAEL,OAAQE,EAAEC,cAAcC,QAExC,EAAKI,MAAMP,SAASqC,I,4CAGtB,WACE,OACE,qCACE,uDACA,kCACE,uBAAO1B,KAAK,OAAOd,KAAK,SAASG,SAAUU,KAAK0B,YAAajC,MAAOO,KAAKd,MAAMG,SAC/E,cAAC,IAAD,CAAauC,KAAK,iB,GAlBPvB,aC4ENwB,E,4MAtEb3C,MAAQ,CACN4C,SAAU,CACR,CAAEjB,GAAI,OAAQ1B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ1B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEyB,GAAI,OAAQ1B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ1B,KAAM,iBAAkBC,OAAQ,cAEhDC,OAAQ,GACR4B,UAAW,I,EAGbc,iBAAmB,SAAAC,GACA,EAAKC,eAAeD,EAAK7C,OAE1C,EAAKO,SAAS,CACZoC,SAAS,GAAD,mBAAM,EAAK5C,MAAM4C,UAAjB,CAA2B,CAAE3C,KAAM6C,EAAK7C,KAAMC,OAAQ4C,EAAK5C,OAAQyB,GAAIqB,oB,EAInFC,eAAiB,SAAAR,GACf,IAAMS,EAAcT,EAAMU,OAAOC,cAIjC,OAHa,EAAKpD,MAAM4C,SACJzC,QAAO,SAAAkD,GAAE,OAAIA,EAAGpD,KAAKmD,cAAcE,QAAQJ,IAAgB,M,EAKjFV,YAAc,SAAAM,GACZ,GAAoB,KAAhBA,EAAKK,OAGP,OAFA,EAAKI,cAAc,SAAU,SAC7B,EAAKA,cAAc,YAAa,IAGlC,EAAK/C,SAAS,CAAEL,OAAQ2C,IACxB,IAAMU,EAAM,EAAKP,eAAeH,GAChC,EAAKtC,SAAS,CAAEuB,UAAWyB,K,EAG7BD,cAAgB,SAACxC,EAAMR,GACrB,EAAKC,SAAL,eAAiBO,EAAOR,K,EAG1BwC,eAAiB,SAAAU,GACf,IAAMC,EAAW,EAAK1D,MAAM4C,SAASe,MAAK,SAAArB,GAAO,OAAIA,EAAQrC,OAASwD,KAEtE,OADIC,GAAUE,MAAM,GAAD,OAAIH,EAAJ,4BACZC,G,EAGTG,YAAc,SAAAC,GACZ,IACMC,EADW,EAAK/D,MAAM4C,SACCzC,QAAO,SAAAkD,GAAE,OAAIA,EAAG1B,KAAOmC,KACpD,EAAKP,cAAc,WAAYQ,I,4CAGjC,WACE,MAAgCjD,KAAKd,MAA7B4C,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,UAElB,OACE,gCACE,2CACA,cAAC,EAAD,CAAMnB,SAAUE,KAAK+B,mBAErB,0CACA,cAAC,EAAD,CAAQzC,SAAUU,KAAK0B,cACvB,cAAC,EAAD,CAAUT,UAAWA,EAAWD,aAAcc,EAAUZ,UAAWlB,KAAK+C,qB,GAjE9D1C,aCKH6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d942c4a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    filter: '',\r\n  };\r\n\r\n  onChange = e => {\r\n    const { value, name } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetInput();\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            onChange={this.onChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport { RiDeleteBin5Fill } from 'react-icons/ri';\r\n\r\nimport s from './ListElement.module.css';\r\n\r\nconst ListElement = ({ elData, deleteBtn }) => {\r\n  const deleteItem = e => {\r\n    // console.log(deleteBtn);\r\n    deleteBtn(elData.id);\r\n  };\r\n  return (\r\n    <li className={s.item}>\r\n      <FaUser className={s.icon} />\r\n      {elData.name}: {elData.number}\r\n      <button type=\"button\" data-id={elData.id} onClick={deleteItem}>\r\n        <RiDeleteBin5Fill />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nListElement.propTypes = { elData: PropTypes.object, deleteBtn: PropTypes.func };\r\n\r\nexport default ListElement;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport ListElement from '../ListElement';\r\n\r\nconst Contacts = ({ contactsList, searchRes, btnDelete }) => {\r\n  const isListEmpty = contactsList.length === 0;\r\n  const isSearchResEmpty = searchRes.length === 0;\r\n  return (\r\n    <div>\r\n      {isListEmpty && <p className=\"message\">Your contacts List is still empty.</p>}\r\n      <ul className={s.list}>\r\n        {isSearchResEmpty\r\n          ? contactsList.map(contact => (\r\n              <ListElement elData={contact} deleteBtn={btnDelete} key={contact.id} />\r\n            ))\r\n          : searchRes.map(contact => <ListElement elData={contact} key={contact.id} />)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nContacts.propTypes = {\r\n  contactsList: PropTypes.arrayOf(PropTypes.object),\r\n  searchRes: PropTypes.array.isRequired,\r\n  btnDelete: PropTypes.func,\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from 'react';\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\nclass Filter extends Component {\r\n  state = {\r\n    filter: '',\r\n  };\r\n\r\n  handleQuery = e => {\r\n    const query = e.currentTarget.value;\r\n    this.setState({ filter: e.currentTarget.value });\r\n    // console.log(query);\r\n    this.props.onChange(query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Find contacts by name</h3>\r\n        <label>\r\n          <input type=\"text\" name=\"filter\" onChange={this.handleQuery} value={this.state.filter} />\r\n          <BiSearchAlt size=\"18\" />\r\n        </label>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4, v4 } from 'uuid';\nimport './App.css';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    searchRes: [],\n  };\n\n  handleFormSubmit = data => {\n    const isDouble = this.checkForDouble(data.name);\n    if (isDouble) return;\n    this.setState({\n      contacts: [...this.state.contacts, { name: data.name, number: data.number, id: uuidv4() }],\n    });\n  };\n\n  searchContacts = query => {\n    const searchQuery = query.trim().toLowerCase();\n    const list = this.state.contacts;\n    const result = list.filter(el => el.name.toLowerCase().indexOf(searchQuery) > -1);\n\n    return result;\n  };\n\n  handleQuery = data => {\n    if (data.trim() === '') {\n      this.updateStateEl('filter', '');\n      this.updateStateEl('searchRes', []);\n      return;\n    }\n    this.setState({ filter: data });\n    const res = this.searchContacts(data);\n    this.setState({ searchRes: res });\n  };\n\n  updateStateEl = (type, value) => {\n    this.setState({ [type]: value });\n  };\n\n  checkForDouble = newName => {\n    const isDouble = this.state.contacts.find(contact => contact.name === newName);\n    if (isDouble) alert(`${newName} is already in contacts`);\n    return isDouble;\n  };\n\n  onDeleteBtn = dataId => {\n    const contacts = this.state.contacts;\n    const updatedList = contacts.filter(el => el.id !== dataId);\n    this.updateStateEl('contacts', updatedList);\n  };\n\n  render() {\n    const { contacts, searchRes } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.handleFormSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter onChange={this.handleQuery} />\n        <Contacts searchRes={searchRes} contactsList={contacts} btnDelete={this.onDeleteBtn} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}